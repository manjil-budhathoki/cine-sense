# backend/model_training/prepare_assets.py

import pandas as pd
import pickle
import os

print("--- Preparing ML assets for Django app ---")

# --- 1. Define Paths relative to the backend folder ---
# Input file (generated by your notebook)
input_csv_path = 'model_training/tmdb_movies_final_emotions.csv'

# Output directory for the Django app
output_dir = 'api/ml_model'
os.makedirs(output_dir, exist_ok=True)

# Output file paths
movies_df_path = os.path.join(output_dir, 'movies_data.pkl')
emotion_matrix_path = os.path.join(output_dir, 'movie_emotion_matrix.pkl')

# --- 2. Load the final dataset ---
if not os.path.exists(input_csv_path):
    print(f"ERROR: Input file not found at '{input_csv_path}'")
    print("Please run your Jupyter Notebook first to generate this file.")
else:
    final_df = pd.read_csv(input_csv_path)
    print("Loaded tmdb_movies_final_emotions.csv successfully.")

    # --- 3. Extract and save the necessary data ---
    emotion_labels = ["joy", "love", "sadness", "fear", "anger", "surprise", "disgust"]
    movie_emotion_matrix = final_df[[f"final_emo_{e}" for e in emotion_labels]].values
    with open(emotion_matrix_path, 'wb') as f:
        pickle.dump(movie_emotion_matrix, f)
    print(f"Saved movie emotion matrix to '{emotion_matrix_path}'")

    # IMPORTANT: Ensure your CSV has a 'poster_path' column for the frontend.
    # If not, add it in your notebook.
    movies_info_df = final_df[['id', 'title', 'overview', 'poster_path']].copy()
    with open(movies_df_path, 'wb') as f:
        pickle.dump(movies_info_df, f)
    print(f"Saved movies info dataframe to '{movies_df_path}'")

    print("\n--- Asset preparation complete! ---")